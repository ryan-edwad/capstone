{
    "info": {
        "name": "HourMap API",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "AuthController",
            "item": [
                {
                    "name": "Register User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/auth/register",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "register"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"email\": \"user@example.com\", \"password\": \"Test@1234\", \"firstName\": \"John\", \"lastName\": \"Doe\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Login",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/auth/login",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "login"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"email\": \"user@example.com\", \"password\": \"Test@1234\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain a token\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.token).to.exist;",
                                    "});",
                                    "",
                                    "// Save token to Postman environment variable",
                                    "pm.environment.set(\"auth_token\", jsonData.token);"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Register User with Invitation",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/auth/register/invite",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "register",
                                "invite"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"email\": \"inviteduser@example.com\", \"password\": \"Test@1234\", \"firstName\": \"Jane\", \"lastName\": \"Doe\", \"token\": \"valid_invite_token\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "InvitationController",
            "item": [
                {
                    "name": "Invite User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/invitation/invite",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "invitation",
                                "invite"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"email\": \"newuser@example.com\", \"organizationId\": 1}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain registrationLink\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.registrationLink).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "LocationController",
            "item": [
                {
                    "name": "Create Location",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/location/create",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "location",
                                "create"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"Main Office\", \"address\": \"123 Main St\", \"city\": \"New York\", \"state\": \"NY\", \"description\": \"Corporate HQ\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Location by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/location/get/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "location",
                                "get",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get All Locations",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/location/all-locations",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "location",
                                "all-locations"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Update Location",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/location/update",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "location",
                                "update"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"name\": \"Updated Location\", \"address\": \"456 Elm St\", \"city\": \"Los Angeles\", \"state\": \"CA\", \"description\": \"Updated Description\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Delete Location",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/location/delete/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "location",
                                "delete",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "TimeEntryController",
            "item": [
                {
                    "name": "Clock In",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/clock-in",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "clock-in"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"projectId\": 1, \"locationId\": 2}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain timeEntryDto\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.timeEntryDto).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Clock Out",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/clock-out/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "clock-out",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Update Time Entry",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/update",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "update"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"clockIn\": \"2024-01-01T08:00:00Z\", \"clockOut\": \"2024-01-01T16:00:00Z\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Delete Time Entry",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/delete/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "delete",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Time Entry by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/get/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "get",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain clockIn\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.clockIn).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Time Entries by User and Date",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/get-all/1?startDate=2024-01-01T00:00:00Z&endDate=2024-01-31T23:59:59Z",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "get-all",
                                "1"
                            ],
                            "query": [
                                {
                                    "key": "startDate",
                                    "value": "2024-01-01T00:00:00Z"
                                },
                                {
                                    "key": "endDate",
                                    "value": "2024-01-31T23:59:59Z"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain clockIn\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.clockIn).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Recent Time Entry",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/recent-entry",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "recent-entry"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain clockIn\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.clockIn).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Payroll Report",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/timeentry/payroll-report?startDate=2024-01-01T00:00:00Z&endDate=2024-01-31T23:59:59Z",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "timeentry",
                                "payroll-report"
                            ],
                            "query": [
                                {
                                    "key": "startDate",
                                    "value": "2024-01-01T00:00:00Z"
                                },
                                {
                                    "key": "endDate",
                                    "value": "2024-01-31T23:59:59Z"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain userId\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.userId).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain totalHours\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.totalHours).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "UserController",
            "item": [
                {
                    "name": "Get All Users",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain email\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.email).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain email\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.email).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Edit User by Manager",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/edit-by-manager/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "edit-by-manager",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"firstName\": \"Updated\", \"lastName\": \"User\", \"email\": \"updateduser@example.com\", \"jobTitle\": \"Senior Developer\", \"payRate\": 50}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Edit My Profile",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/edit-my-profile/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "edit-my-profile",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"firstName\": \"NewName\", \"lastName\": \"Updated\", \"email\": \"newemail@example.com\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Assign Project to User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/assign-project/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "assign-project",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"name\": \"New Project\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Remove Project from User",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/remove-project/1/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "remove-project",
                                "1",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Promote User to Manager",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/add-manager-role/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "add-manager-role",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Demote User from Manager",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/remove-manager-role/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "remove-manager-role",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Disable User Sign-In",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/disable-sign-in/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "disable-sign-in",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Enable User Sign-In",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/enable-sign-in/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "enable-sign-in",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain email\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.email).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Edit User Profile by Manager",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/edit-by-manager/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "edit-by-manager",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"firstName\": \"Updated\", \"lastName\": \"User\", \"email\": \"updateduser@example.com\", \"jobTitle\": \"Developer\", \"payRate\": 60}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Edit Own Profile",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/edit-my-profile/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "edit-my-profile",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"firstName\": \"Updated\", \"lastName\": \"Self\", \"email\": \"selfupdate@example.com\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Assign Project to User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/assign-project/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "assign-project",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"name\": \"New Project\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Remove Project from User",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/remove-project/1/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "remove-project",
                                "1",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Promote User to Manager",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/add-manager-role/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "add-manager-role",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Demote Manager to Employee",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/remove-manager-role/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "remove-manager-role",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Disable User Sign-In",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/disable-sign-in/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "disable-sign-in",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Enable User Sign-In",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/enable-sign-in/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "enable-sign-in",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain email\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.email).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Edit User Profile (Manager)",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/edit-by-manager/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "edit-by-manager",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"firstName\": \"Updated\", \"lastName\": \"User\", \"email\": \"updateduser@example.com\", \"jobTitle\": \"Developer\", \"payRate\": 50}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Edit Own Profile",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/edit-my-profile/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "edit-my-profile",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"firstName\": \"Updated\", \"lastName\": \"Self\", \"email\": \"selfuser@example.com\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain token\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.token).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Assign Project to User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/assign-project/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "assign-project",
                                "1"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"name\": \"New Project\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Remove Project from User",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/remove-project/1/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "remove-project",
                                "1",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Disable User Sign-in",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/disable-sign-in/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "disable-sign-in",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Enable User Sign-in",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/enable-sign-in/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "enable-sign-in",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Promote User to Manager",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/add-manager-role/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "add-manager-role",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Demote User from Manager",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/user/remove-manager-role/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "user",
                                "remove-manager-role",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ProjectController",
            "item": [
                {
                    "name": "Get All Projects",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/project/get-projects",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "project",
                                "get-projects"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Project by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/project/get/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "project",
                                "get",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Update Project",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/project/update",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "project",
                                "update"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"name\": \"Updated Project\", \"description\": \"Updated description\", \"enabled\": true}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Delete Project",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/project/delete",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "project",
                                "delete"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Assigned Users for Project",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/project/1/assigned-users",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "project",
                                "1",
                                "assigned-users"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain email\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.email).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "OrganizationController",
            "item": [
                {
                    "name": "Create Organization",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/organization/create",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "organization",
                                "create"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\": \"New Organization\", \"description\": \"A new company\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain message\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.message).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain token\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.token).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Get Organization by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/organization/get/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "organization",
                                "get",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Update Organization",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/organization/update",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "organization",
                                "update"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\"id\": 1, \"name\": \"Updated Organization\", \"description\": \"Updated description\"}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain id\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.id).to.exist;",
                                    "});",
                                    "",
                                    "pm.test(\"Response should contain name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.name).to.exist;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Delete Organization",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api/organization/delete/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api",
                                "organization",
                                "delete",
                                "1"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}